The worst case time complexity of HashTable::rehash() is O(n), as it calls the resize function using the prime_below function which uses the setPrimes function. The setPrimes function has a time complexity of O(n^2), because it contains a for loop within a for loop. The prime_below function has a while loop within it, but, since the loop does not contain the setPrimes function, they have a combined time complexity of O(n^2). Since the resize() function calls this function, and the resize() function has a linear complexity of O(n), it thus has a time complexity of O(O(n^2)) or O(n^2). Also, I just realized I forgot to finish my rehash function. Woops!

The worst case time complexity of PassServer::removeUser(const string & k) is O(n). It calls the remove() function of HashTable, which begins by iterating through the hash table looking for a given value k. The myhash function iterates through the hash function in a for loop, which has a linear time complexity. Remove also has another for loop within it, O(n)+O(n) = O(n).